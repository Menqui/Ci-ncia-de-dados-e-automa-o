{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Menqui/Ciencia-de-dados-e-automacao/blob/main/Ol%C3%A1%2C_este_%C3%A9_o_Colaboratory.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas.core.internals.array_manager import NullArrayProxy\n",
        "# Using the NIKE Search API \n",
        "\n",
        "# Importing necessary libraries\n",
        "import requests         # pip install requests\n",
        "import json\n",
        "import pandas as pd\n",
        "\n",
        "\n",
        "# Make GET request to site\n",
        "count = 60\n",
        "anchor = 0\n",
        "country = 'GB'\n",
        "country_language = 'en-GB'\n",
        "query = 'jordan'\n",
        "url = f'https://api.nike.com/cic/browse/v2?queryid=products&anonymousId=241B0FAA1AC3D3CB734EA4B24C8C910D&country={country}&endpoint=%2Fproduct_feed%2Frollup_threads%2Fv2%3Ffilter%3Dmarketplace({country})%26filter%3Dlanguage({country_language})%26filter%3DemployeePrice(true)%26searchTerms%3D{query}%26anchor%3D{anchor}%26consumerChannelId%3Dd9a5bc42-4b9c-4976-858a-f159cf99c647%26count%3D{count}&language={country_language}&localizedRangeStr=%7BlowestPrice%7D%E2%80%94%7BhighestPrice%7D'\n",
        "\n",
        "html = requests.get(url=url)\n",
        "output = json.loads(html.text)\n",
        "#print(output['data'])\n",
        "list=[]\n",
        "\n",
        "\n",
        "\n",
        "# Loop through products and print name\n",
        "for item in output['data']['products']['products']:\n",
        "    #print(item['title'],':',item['inStock'])\n",
        "    #aux =item['title']+':'+ str(item['inStock'])\n",
        "    #list.append(aux)\n",
        "    #print(item['title'],':',item['price']['fullPrice'])\n",
        "     aux = item['title'],item['price']['fullPrice']\n",
        "     list.append(aux)\n",
        "\n",
        "#adiciona os itens\n",
        "for i in list:\n",
        "   df = pd.DataFrame(list)\n",
        "\n",
        "#muda o nome da coluna\n",
        "df.columns = ['Produto','Preço']\n",
        "\n",
        "#imprimindo o dataframe\n",
        "#display(df)\n",
        "\n",
        "#xportando o dataframe para arquivo em excel\n",
        "file_name = 'jordans_GB.xlsx'\n",
        "\n",
        "#escrevendo para excel\n",
        "data_excel = pd.ExcelWriter(file_name)\n",
        "\n",
        "#passando df para excel\n",
        "data = df\n",
        "data.to_excel(data_excel)\n",
        "data.info()\n",
        "#salvando excel\n",
        "#data_excel.save()\n",
        "#print('DataFrame convertido para excel com sucesso!')"
      ],
      "metadata": {
        "id": "6BkiZx6yM6mZ",
        "outputId": "a0f5d5fb-31f6-4f56-ac48-f3046f71ff49",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 103,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 60 entries, 0 to 59\n",
            "Data columns (total 2 columns):\n",
            " #   Column   Non-Null Count  Dtype  \n",
            "---  ------   --------------  -----  \n",
            " 0   Produto  60 non-null     object \n",
            " 1   Preço    60 non-null     float64\n",
            "dtypes: float64(1), object(1)\n",
            "memory usage: 1.1+ KB\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "name": "Olá, este é o Colaboratory",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
